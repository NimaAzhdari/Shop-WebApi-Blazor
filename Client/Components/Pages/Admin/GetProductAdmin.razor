@page "/GetProductAdmin"
@using Radzen
@using Radzen.Blazor
@inject HttpClient http
@inject NavigationManager NavigationManager
@inject DialogService DialogService


<RadzenDataList Data="@products" TItem="Product">
 <Template Context="product">
    <RadzenCard>
        <RadzenRow>

            <RadzenColumn>
                <RadzenImage Path="@($"{baseUrl}{product.ImageURL}")" Style="width: 5rem;"></RadzenImage>
            </RadzenColumn>

            <RadzenColumn>
                <RadzenRow>

                    <RadzenColumn>
                            <RadzenText>@product.Name</RadzenText>
                            <RadzenText>@product.Description</RadzenText>
                    </RadzenColumn>

                    <RadzenColumn>
                            <RadzenText>موجودی</RadzenText>
                            <RadzenText>@product.Stock</RadzenText>
                    </RadzenColumn>

                    <RadzenColumn >
                            <RadzenBadge Variant="Variant.Flat"  BadgeStyle="BadgeStyle.Secondary" Shade="Shade.Dark" Style="font-size:24px" Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", product.Price)}")/>
                    </RadzenColumn>

                </RadzenRow>
            </RadzenColumn>

            <RadzenColumn>
                <RadzenButton Click="@(()=>UpdateProduct(product.Id))" Icon="edit" Text="به روزرسانی"></RadzenButton>
                <RadzenButton Click="@(()=>DeleteProduct(product.Id))" Icon="delete" Text="حذف"></RadzenButton>
            </RadzenColumn>

        </RadzenRow>
    </RadzenCard>
</Template> 

</RadzenDataList>




@code
{
    private string baseUrl{get;set;}
    List<Product> products=new();
    
        protected override async Task OnInitializedAsync()
        {
            baseUrl = NavigationManager.BaseUri;
           products= await http.GetFromJsonAsync<List<Product>>("api/User/GetProduct");
        }

    void UpdateProduct(Guid Id)
    {
         NavigationManager.NavigateTo($"/UpdateProduct/{Id}");
    }

    async Task DeleteProduct(Guid id)
    {
        var response=await http.DeleteAsync($"/api/Admin/DeleteProduct/{id}");
        if(response.IsSuccessStatusCode)
        {
            await DialogService.OpenAsync(
                "پیام",
                ds => @<div>
                    <h4> انجام شد</h4>
                </div>,
                 new DialogOptions { Width = "400px", Height = "200px" }
                );
        }
    
    }
}

