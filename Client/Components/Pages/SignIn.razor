@page "/signup"
@using Radzen
@inject HttpClient Http
@inject NavigationManager Navigation
@inject DialogService DialogService


<EditForm Model="model" OnValidSubmit="HandleSignin" class="h-50">
    <DataAnnotationsValidator/>
     <div class="form-floating mt-2 mb-2">
        <InputText @bind-Value=model.PhoneNumber id="phone" placeholder="شماره تماس" class="form-control"/>
        <label for="phone">شماره تماس</label>
        <ValidationMessage For="()=>model.PhoneNumber"/>
    </div>
     <div class="form-floating mt-2 mb-2">
        <InputText @bind-Value=model.UserName  id="username"  placeholder="نام کاربری" class="form-control"/>
        <label for="username">نام کاربری</label>
        <ValidationMessage For="()=>model.UserName"/>
    </div>
     <div class="form-floating mt-2 mb-2">
        <InputText @bind-Value=model.Password  type="password" id="pwd" placeholder="رمز عبور" class="form-control"/>
        <label for="pwd">رمز عبور</label>
        <ValidationMessage For="()=>model.Password"/>
    </div>
    <div class="d-grid mt-4 mb-1 ">
    <button type="submit" class="btn btn-lg bg-success text-white rounded">
       <h4>ارسال</h4>
     </button>
     </div>
</EditForm>
@code
{
    SigninModel model=new();
    async Task HandleSignin()
    {
        var response=await Http.PostAsJsonAsync("api/Account/signin",model);
        if (response.IsSuccessStatusCode)
        {
            await DialogService.OpenAsync(
                "پیام",
                ds => @<div>
                    <h4> انجام شد</h4>
                </div>,
                 new DialogOptions { Width = "400px", Height = "200px" }
                );
            Navigation.NavigateTo("/login");
        }
        else
        {}
    }
}